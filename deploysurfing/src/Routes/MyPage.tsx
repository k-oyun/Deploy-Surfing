import React, { useEffect, useState } from "react";
import Header from "../Components/Header";
import styled from "styled-components";
import Footer from "../Components/Footer";
import { motion } from "framer-motion";
import { userDelete, userGet } from "../api";
import { useNavigate } from "react-router-dom";
const Wrapper = styled.div`
  display: flex;
  justify-content: center;
  background-color: black;
`;

const UserInfoWrapper = styled.div`
  width: 35rem;
  height: 40rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 5%;
  margin-bottom: 7%;
  background-color: #181818;
  border-radius: 20px;
`;

const UserInfo = styled.div`
  width: 90%;
  height: 3rem;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  margin-top: 1rem;
`;

const UserProfile = styled.div`
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 50%;
  margin-right: 1rem;
  background-color: white;
`;

const UserName = styled.div`
  font-weight: 800;
  font-size: 1rem;
  color: white;
`;

const GitHubDocker = styled.div`
  width: 87%;
  height: 5.5rem;
  border-radius: 15px;
  margin-top: 1.5rem;
  background-color: rgb(59, 59, 59);
`;

const AWS = styled.div`
  width: 87%;
  height: 15rem;
  border-radius: 15px;
  margin-top: 1.5rem;
  background-color: rgb(59, 59, 59);
`;
const ExplainTxt = styled.span`
  display: block;
  font-weight: 800;
  font-size: 1rem;
  margin-top: 1rem;
  margin-left: 1rem;
  color: white;
`;

const ImpInput = styled.input`
  width: 100%;
  height: 100%;
  /* margin-left: 1rem; */
  /* margin-top: 0.3rem; */
  padding-left: 0.5rem;
  border: 0px;
  border-radius: 10px;
`;

const InputWrapper = styled.div`
  width: 90%;
  height: 2rem;
  margin-left: 1rem;
  margin-top: 0.3rem;
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: center;
`;

const ButtonWrapper = styled.div`
  width: 87%;
  height: 2rem;
  display: flex;
  margin-top: 2rem;
  justify-content: space-between;
`;

const Button = styled.button`
  width: 18%;
  height: 2.5rem;
  border: 0px;
  border-radius: 15px;
  font-weight: 700;
  background-color: ${(props) => props.theme.mainColor};
  cursor: pointer;
`;

const PencilSvg = styled(motion.svg)`
  cursor: pointer;
  position: absolute;
  margin-right: 2.8rem;
`;

const EyeSvg = styled(motion.svg)`
  cursor: pointer;
  position: absolute;
  margin-right: 0.5rem;
`;

function MyPage() {
  const [userName, setUserName] = useState<string>("");
  const [gitHubToken, setGitHubToken] = useState<string>(``);
  const [awsRoleArn, setAWSRoleArn] = useState<string>(``);
  const [awsAccessKey, setAWSAccessKey] = useState<string>(``);
  const [awsSecretKey, setAWSSecretKey] = useState<string>(``);
  const [dockerHubToken, setDockerHubToken] = useState<string>(``);
  const navigate = useNavigate();

  const onChangeGitHub = (text: React.ChangeEvent<HTMLInputElement>) => {
    setGitHubToken(text.target.value);
  };
  const onChangeAWSArn = (text: React.ChangeEvent<HTMLInputElement>) => {
    setAWSRoleArn(text.target.value);
  };
  const onChangeAWSAccessKey = (text: React.ChangeEvent<HTMLInputElement>) => {
    setAWSAccessKey(text.target.value);
  };
  const onChangeAWSSecretKey = (text: React.ChangeEvent<HTMLInputElement>) => {
    setAWSSecretKey(text.target.value);
  };
  const onChangeDockerHubToken = (
    text: React.ChangeEvent<HTMLInputElement>
  ) => {
    setDockerHubToken(text.target.value);
  };

  //----------아이콘 누름 처리-------------
  const [gitReady, setGitReady] = useState<boolean>(false);
  const [gitCanSee, setGitCanSee] = useState<string>("password");
  const [awsArnReady, setAwsArnReady] = useState<boolean>(false);
  const [awsArnCanSee, setAwsArnCanSee] = useState<string>("password");
  const [awsAcessReady, setAwsAcessReady] = useState<boolean>(false);
  const [awsAcessCanSee, setAwsAcessCanSee] = useState<string>("password");
  const [awsSecretReady, setAwsSecretReady] = useState<boolean>(false);
  const [awsSecretCanSee, setAwsSecretCanSee] = useState<string>("password");
  const [dockerReady, setDockerReady] = useState<boolean>(false);
  const [dockerCanSee, setDockerCanSee] = useState<string>("password");

  //--------------------------------------------------------
  const accessToken = localStorage.getItem("accessToken");
  useEffect(() => {
    (async () => {
      console.log(accessToken);

      if (accessToken) {
        try {
          const res = await userGet(accessToken);
          setUserName(res?.data.result.name);
        } catch (error) {
          console.error("사용자 조회 실패", error);
        }
      }
    })();
  }, []);

  const onclickUserDelete = async () => {
    if (accessToken) {
      try {
        const res = await userDelete(accessToken);
        if (res.code === "200") {
          localStorage.removeItem("accessToken");
          alert("회원 탈퇴가 완료되었습니다.");
          navigate("/");
        } else {
          alert("예상치 못한 문제가 발생했습니다.");
        }
      } catch (error) {
        alert("탈퇴 처리 중 문제가 발생했습니다.");
      }
    }
  };

  return (
    <>
      <Header />
      <Wrapper>
        <UserInfoWrapper>
          <UserInfo>
            <UserProfile></UserProfile>
            <UserName>{userName}</UserName>
          </UserInfo>
          <GitHubDocker>
            <ExplainTxt>GitHub Token</ExplainTxt>
            <InputWrapper>
              <ImpInput
                type={gitCanSee}
                onChange={onChangeGitHub}
                value={gitHubToken || ""}
                readOnly={gitReady}
              ></ImpInput>
              <PencilSvg
                width="20"
                height="20"
                viewBox="0 0 23 23"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                onClick={() => {
                  setGitReady((prev) => !prev);
                }}
              >
                <path
                  d="M17.7646 10.5244L18.2404 10.0486L16.813 8.62119L14.1981 6.00632L12.7706 4.57888L12.2948 5.0547L11.3432 6.00632L2.9554 14.3941C2.51749 14.832 2.19747 15.3752 2.02062 15.9689L0.530017 21.0387C0.424748 21.3924 0.521595 21.7755 0.786872 22.0366C1.05215 22.2977 1.43112 22.3945 1.78482 22.2935L6.85034 20.8029C7.44405 20.626 7.98724 20.306 8.42515 19.8681L16.813 11.4803L17.7646 10.5244ZM7.22509 17.6153L6.84192 18.5712C6.67349 18.7017 6.484 18.7985 6.28189 18.8617L2.98909 19.8302L3.95756 16.5416C4.01651 16.3353 4.11757 16.1458 4.2481 15.9816L5.20394 15.5984V16.9458C5.20394 17.3164 5.50711 17.6195 5.87766 17.6195H7.22509V17.6153ZM15.7603 1.58505L15.1539 2.1956L14.2023 3.14723L13.7223 3.62304L15.1497 5.05048L17.7646 7.66535L19.192 9.09279L19.6678 8.61698L20.6195 7.66535L21.23 7.0548C22.2827 6.00211 22.2827 4.29676 21.23 3.24408L19.5752 1.58505C18.5225 0.532361 16.8172 0.532361 15.7645 1.58505H15.7603ZM13.7644 8.65909L7.70091 14.7226C7.43984 14.9836 7.01035 14.9836 6.74928 14.7226C6.48821 14.4615 6.48821 14.032 6.74928 13.7709L12.8127 7.70746C13.0738 7.4464 13.5033 7.4464 13.7644 7.70746C14.0254 7.96853 14.0254 8.39802 13.7644 8.65909Z"
                  fill="black"
                />
              </PencilSvg>
              {gitCanSee === "text" ? (
                <EyeSvg
                  width="25"
                  height="23"
                  viewBox="0 0 25 23"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  onClick={() => {
                    setGitCanSee((prev) =>
                      prev === "password" ? "text" : "password"
                    );
                  }}
                >
                  <path
                    d="M12.4999 1.4375C8.99295 1.4375 6.18479 3.09062 4.14052 5.0582C2.10927 7.00781 0.75076 9.34375 0.108398 10.9475C-0.0348307 11.3023 -0.0348307 11.6977 0.108398 12.0525C0.75076 13.6562 2.10927 15.9922 4.14052 17.9418C6.18479 19.9094 8.99295 21.5625 12.4999 21.5625C16.0068 21.5625 18.815 19.9094 20.8593 17.9418C22.8905 15.9877 24.249 13.6562 24.8957 12.0525C25.039 11.6977 25.039 11.3023 24.8957 10.9475C24.249 9.34375 22.8905 7.00781 20.8593 5.0582C18.815 3.09062 16.0068 1.4375 12.4999 1.4375ZM6.24989 11.5C6.24989 9.78438 6.90837 8.13903 8.08047 6.9259C9.25258 5.71278 10.8423 5.03125 12.4999 5.03125C14.1575 5.03125 15.7472 5.71278 16.9193 6.9259C18.0914 8.13903 18.7499 9.78438 18.7499 11.5C18.7499 13.2156 18.0914 14.861 16.9193 16.0741C15.7472 17.2872 14.1575 17.9688 12.4999 17.9688C10.8423 17.9688 9.25258 17.2872 8.08047 16.0741C6.90837 14.861 6.24989 13.2156 6.24989 11.5ZM12.4999 8.625C12.4999 10.2107 11.2542 11.5 9.72211 11.5C9.41395 11.5 9.11882 11.4461 8.84104 11.3518C8.60232 11.2709 8.32454 11.4236 8.33323 11.6842C8.34625 11.9941 8.38965 12.3041 8.47211 12.6141C9.06673 14.9141 11.3541 16.2797 13.5763 15.6643C15.7985 15.0488 17.1179 12.6814 16.5233 10.3814C16.0416 8.51719 14.4487 7.26387 12.6778 7.1875C12.4261 7.17852 12.2785 7.46152 12.3567 7.71309C12.4478 8.00059 12.4999 8.30605 12.4999 8.625Z"
                    fill="black"
                  />
                </EyeSvg>
              ) : (
                <EyeSvg
                  width="26"
                  height="22"
                  viewBox="0 0 27 23"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  onClick={() => {
                    setGitCanSee((prev) =>
                      prev === "password" ? "text" : "password"
                    );
                  }}
                >
                  <path
                    d="M1.74203 1.01223C1.30761 0.666945 0.676877 0.746949 0.334358 1.18487C-0.00816014 1.62278 0.0712039 2.2586 0.505618 2.60389L25.2338 22.1417C25.6682 22.487 26.2989 22.407 26.6414 21.9691C26.984 21.5312 26.9046 20.8953 26.4702 20.5501L22.0759 17.0804C23.73 15.3708 24.8495 13.455 25.4134 12.0949C25.5512 11.7622 25.5512 11.3917 25.4134 11.0591C24.791 9.55582 23.4836 7.36623 21.5287 5.53877C19.5655 3.69447 16.863 2.14491 13.4879 2.14491C10.6392 2.14491 8.26658 3.25234 6.41615 4.70504L1.74203 1.01223ZM9.44034 7.09253C10.5055 6.11143 11.9299 5.51351 13.4879 5.51351C16.8087 5.51351 19.5029 8.22943 19.5029 11.577C19.5029 12.6254 19.2397 13.6108 18.7761 14.4698L17.1637 13.1981C17.5146 12.3854 17.6065 11.4549 17.3642 10.5327C16.9006 8.78525 15.3676 7.61046 13.6633 7.53887C13.4211 7.53045 13.279 7.79573 13.3542 8.03153C13.442 8.30102 13.4921 8.58735 13.4921 8.88631C13.4921 9.3158 13.3918 9.72004 13.2164 10.0779L9.44451 7.09675L9.44034 7.09253ZM15.7017 17.2152C15.0167 17.4888 14.269 17.6404 13.4879 17.6404C10.1671 17.6404 7.47294 14.9245 7.47294 11.577C7.47294 11.2864 7.49383 11.0043 7.53142 10.7264L3.59246 7.59782C2.64009 8.84841 1.95923 10.0948 1.56241 11.0591C1.42457 11.3917 1.42457 11.7622 1.56241 12.0949C2.18479 13.5981 3.49221 15.7877 5.44707 17.6152C7.41029 19.4595 10.1128 21.009 13.4879 21.009C15.4845 21.009 17.2431 20.4658 18.7593 19.6405L15.7017 17.2152Z"
                    fill="black"
                  />
                </EyeSvg>
              )}
            </InputWrapper>
          </GitHubDocker>
          <AWS>
            <ExplainTxt>AWS IAM RoleArn</ExplainTxt>
            <InputWrapper>
              <ImpInput
                type={awsArnCanSee}
                onChange={onChangeAWSArn}
                value={awsRoleArn || ""}
                readOnly={awsArnReady}
              ></ImpInput>
              <PencilSvg
                width="20"
                height="20"
                viewBox="0 0 23 23"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                onClick={() => {
                  setAwsArnReady((prev) => !prev);
                }}
              >
                <path
                  d="M17.7646 10.5244L18.2404 10.0486L16.813 8.62119L14.1981 6.00632L12.7706 4.57888L12.2948 5.0547L11.3432 6.00632L2.9554 14.3941C2.51749 14.832 2.19747 15.3752 2.02062 15.9689L0.530017 21.0387C0.424748 21.3924 0.521595 21.7755 0.786872 22.0366C1.05215 22.2977 1.43112 22.3945 1.78482 22.2935L6.85034 20.8029C7.44405 20.626 7.98724 20.306 8.42515 19.8681L16.813 11.4803L17.7646 10.5244ZM7.22509 17.6153L6.84192 18.5712C6.67349 18.7017 6.484 18.7985 6.28189 18.8617L2.98909 19.8302L3.95756 16.5416C4.01651 16.3353 4.11757 16.1458 4.2481 15.9816L5.20394 15.5984V16.9458C5.20394 17.3164 5.50711 17.6195 5.87766 17.6195H7.22509V17.6153ZM15.7603 1.58505L15.1539 2.1956L14.2023 3.14723L13.7223 3.62304L15.1497 5.05048L17.7646 7.66535L19.192 9.09279L19.6678 8.61698L20.6195 7.66535L21.23 7.0548C22.2827 6.00211 22.2827 4.29676 21.23 3.24408L19.5752 1.58505C18.5225 0.532361 16.8172 0.532361 15.7645 1.58505H15.7603ZM13.7644 8.65909L7.70091 14.7226C7.43984 14.9836 7.01035 14.9836 6.74928 14.7226C6.48821 14.4615 6.48821 14.032 6.74928 13.7709L12.8127 7.70746C13.0738 7.4464 13.5033 7.4464 13.7644 7.70746C14.0254 7.96853 14.0254 8.39802 13.7644 8.65909Z"
                  fill="black"
                />
              </PencilSvg>
              {awsArnCanSee === "text" ? (
                <EyeSvg
                  width="25"
                  height="23"
                  viewBox="0 0 25 23"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  onClick={() => {
                    setAwsArnCanSee((prev) =>
                      prev === "password" ? "text" : "password"
                    );
                  }}
                >
                  <path
                    d="M12.4999 1.4375C8.99295 1.4375 6.18479 3.09062 4.14052 5.0582C2.10927 7.00781 0.75076 9.34375 0.108398 10.9475C-0.0348307 11.3023 -0.0348307 11.6977 0.108398 12.0525C0.75076 13.6562 2.10927 15.9922 4.14052 17.9418C6.18479 19.9094 8.99295 21.5625 12.4999 21.5625C16.0068 21.5625 18.815 19.9094 20.8593 17.9418C22.8905 15.9877 24.249 13.6562 24.8957 12.0525C25.039 11.6977 25.039 11.3023 24.8957 10.9475C24.249 9.34375 22.8905 7.00781 20.8593 5.0582C18.815 3.09062 16.0068 1.4375 12.4999 1.4375ZM6.24989 11.5C6.24989 9.78438 6.90837 8.13903 8.08047 6.9259C9.25258 5.71278 10.8423 5.03125 12.4999 5.03125C14.1575 5.03125 15.7472 5.71278 16.9193 6.9259C18.0914 8.13903 18.7499 9.78438 18.7499 11.5C18.7499 13.2156 18.0914 14.861 16.9193 16.0741C15.7472 17.2872 14.1575 17.9688 12.4999 17.9688C10.8423 17.9688 9.25258 17.2872 8.08047 16.0741C6.90837 14.861 6.24989 13.2156 6.24989 11.5ZM12.4999 8.625C12.4999 10.2107 11.2542 11.5 9.72211 11.5C9.41395 11.5 9.11882 11.4461 8.84104 11.3518C8.60232 11.2709 8.32454 11.4236 8.33323 11.6842C8.34625 11.9941 8.38965 12.3041 8.47211 12.6141C9.06673 14.9141 11.3541 16.2797 13.5763 15.6643C15.7985 15.0488 17.1179 12.6814 16.5233 10.3814C16.0416 8.51719 14.4487 7.26387 12.6778 7.1875C12.4261 7.17852 12.2785 7.46152 12.3567 7.71309C12.4478 8.00059 12.4999 8.30605 12.4999 8.625Z"
                    fill="black"
                  />
                </EyeSvg>
              ) : (
                <EyeSvg
                  width="26"
                  height="22"
                  viewBox="0 0 27 23"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  onClick={() => {
                    setAwsArnCanSee((prev) =>
                      prev === "password" ? "text" : "password"
                    );
                  }}
                >
                  <path
                    d="M1.74203 1.01223C1.30761 0.666945 0.676877 0.746949 0.334358 1.18487C-0.00816014 1.62278 0.0712039 2.2586 0.505618 2.60389L25.2338 22.1417C25.6682 22.487 26.2989 22.407 26.6414 21.9691C26.984 21.5312 26.9046 20.8953 26.4702 20.5501L22.0759 17.0804C23.73 15.3708 24.8495 13.455 25.4134 12.0949C25.5512 11.7622 25.5512 11.3917 25.4134 11.0591C24.791 9.55582 23.4836 7.36623 21.5287 5.53877C19.5655 3.69447 16.863 2.14491 13.4879 2.14491C10.6392 2.14491 8.26658 3.25234 6.41615 4.70504L1.74203 1.01223ZM9.44034 7.09253C10.5055 6.11143 11.9299 5.51351 13.4879 5.51351C16.8087 5.51351 19.5029 8.22943 19.5029 11.577C19.5029 12.6254 19.2397 13.6108 18.7761 14.4698L17.1637 13.1981C17.5146 12.3854 17.6065 11.4549 17.3642 10.5327C16.9006 8.78525 15.3676 7.61046 13.6633 7.53887C13.4211 7.53045 13.279 7.79573 13.3542 8.03153C13.442 8.30102 13.4921 8.58735 13.4921 8.88631C13.4921 9.3158 13.3918 9.72004 13.2164 10.0779L9.44451 7.09675L9.44034 7.09253ZM15.7017 17.2152C15.0167 17.4888 14.269 17.6404 13.4879 17.6404C10.1671 17.6404 7.47294 14.9245 7.47294 11.577C7.47294 11.2864 7.49383 11.0043 7.53142 10.7264L3.59246 7.59782C2.64009 8.84841 1.95923 10.0948 1.56241 11.0591C1.42457 11.3917 1.42457 11.7622 1.56241 12.0949C2.18479 13.5981 3.49221 15.7877 5.44707 17.6152C7.41029 19.4595 10.1128 21.009 13.4879 21.009C15.4845 21.009 17.2431 20.4658 18.7593 19.6405L15.7017 17.2152Z"
                    fill="black"
                  />
                </EyeSvg>
              )}
            </InputWrapper>

            <ExplainTxt>AWS IAM Access Key</ExplainTxt>
            <InputWrapper>
              <ImpInput
                type={awsAcessCanSee}
                onChange={onChangeAWSAccessKey}
                value={awsAccessKey || ""}
                readOnly={awsAcessReady}
              ></ImpInput>
              <PencilSvg
                width="20"
                height="20"
                viewBox="0 0 23 23"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                onClick={() => {
                  setAwsAcessReady((prev) => !prev);
                }}
              >
                <path
                  d="M17.7646 10.5244L18.2404 10.0486L16.813 8.62119L14.1981 6.00632L12.7706 4.57888L12.2948 5.0547L11.3432 6.00632L2.9554 14.3941C2.51749 14.832 2.19747 15.3752 2.02062 15.9689L0.530017 21.0387C0.424748 21.3924 0.521595 21.7755 0.786872 22.0366C1.05215 22.2977 1.43112 22.3945 1.78482 22.2935L6.85034 20.8029C7.44405 20.626 7.98724 20.306 8.42515 19.8681L16.813 11.4803L17.7646 10.5244ZM7.22509 17.6153L6.84192 18.5712C6.67349 18.7017 6.484 18.7985 6.28189 18.8617L2.98909 19.8302L3.95756 16.5416C4.01651 16.3353 4.11757 16.1458 4.2481 15.9816L5.20394 15.5984V16.9458C5.20394 17.3164 5.50711 17.6195 5.87766 17.6195H7.22509V17.6153ZM15.7603 1.58505L15.1539 2.1956L14.2023 3.14723L13.7223 3.62304L15.1497 5.05048L17.7646 7.66535L19.192 9.09279L19.6678 8.61698L20.6195 7.66535L21.23 7.0548C22.2827 6.00211 22.2827 4.29676 21.23 3.24408L19.5752 1.58505C18.5225 0.532361 16.8172 0.532361 15.7645 1.58505H15.7603ZM13.7644 8.65909L7.70091 14.7226C7.43984 14.9836 7.01035 14.9836 6.74928 14.7226C6.48821 14.4615 6.48821 14.032 6.74928 13.7709L12.8127 7.70746C13.0738 7.4464 13.5033 7.4464 13.7644 7.70746C14.0254 7.96853 14.0254 8.39802 13.7644 8.65909Z"
                  fill="black"
                />
              </PencilSvg>
              {awsAcessCanSee === "text" ? (
                <EyeSvg
                  width="25"
                  height="23"
                  viewBox="0 0 25 23"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  onClick={() => {
                    setAwsAcessCanSee((prev) =>
                      prev === "password" ? "text" : "password"
                    );
                  }}
                >
                  <path
                    d="M12.4999 1.4375C8.99295 1.4375 6.18479 3.09062 4.14052 5.0582C2.10927 7.00781 0.75076 9.34375 0.108398 10.9475C-0.0348307 11.3023 -0.0348307 11.6977 0.108398 12.0525C0.75076 13.6562 2.10927 15.9922 4.14052 17.9418C6.18479 19.9094 8.99295 21.5625 12.4999 21.5625C16.0068 21.5625 18.815 19.9094 20.8593 17.9418C22.8905 15.9877 24.249 13.6562 24.8957 12.0525C25.039 11.6977 25.039 11.3023 24.8957 10.9475C24.249 9.34375 22.8905 7.00781 20.8593 5.0582C18.815 3.09062 16.0068 1.4375 12.4999 1.4375ZM6.24989 11.5C6.24989 9.78438 6.90837 8.13903 8.08047 6.9259C9.25258 5.71278 10.8423 5.03125 12.4999 5.03125C14.1575 5.03125 15.7472 5.71278 16.9193 6.9259C18.0914 8.13903 18.7499 9.78438 18.7499 11.5C18.7499 13.2156 18.0914 14.861 16.9193 16.0741C15.7472 17.2872 14.1575 17.9688 12.4999 17.9688C10.8423 17.9688 9.25258 17.2872 8.08047 16.0741C6.90837 14.861 6.24989 13.2156 6.24989 11.5ZM12.4999 8.625C12.4999 10.2107 11.2542 11.5 9.72211 11.5C9.41395 11.5 9.11882 11.4461 8.84104 11.3518C8.60232 11.2709 8.32454 11.4236 8.33323 11.6842C8.34625 11.9941 8.38965 12.3041 8.47211 12.6141C9.06673 14.9141 11.3541 16.2797 13.5763 15.6643C15.7985 15.0488 17.1179 12.6814 16.5233 10.3814C16.0416 8.51719 14.4487 7.26387 12.6778 7.1875C12.4261 7.17852 12.2785 7.46152 12.3567 7.71309C12.4478 8.00059 12.4999 8.30605 12.4999 8.625Z"
                    fill="black"
                  />
                </EyeSvg>
              ) : (
                <EyeSvg
                  width="26"
                  height="22"
                  viewBox="0 0 27 23"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  onClick={() => {
                    setAwsAcessCanSee((prev) =>
                      prev === "password" ? "text" : "password"
                    );
                  }}
                >
                  <path
                    d="M1.74203 1.01223C1.30761 0.666945 0.676877 0.746949 0.334358 1.18487C-0.00816014 1.62278 0.0712039 2.2586 0.505618 2.60389L25.2338 22.1417C25.6682 22.487 26.2989 22.407 26.6414 21.9691C26.984 21.5312 26.9046 20.8953 26.4702 20.5501L22.0759 17.0804C23.73 15.3708 24.8495 13.455 25.4134 12.0949C25.5512 11.7622 25.5512 11.3917 25.4134 11.0591C24.791 9.55582 23.4836 7.36623 21.5287 5.53877C19.5655 3.69447 16.863 2.14491 13.4879 2.14491C10.6392 2.14491 8.26658 3.25234 6.41615 4.70504L1.74203 1.01223ZM9.44034 7.09253C10.5055 6.11143 11.9299 5.51351 13.4879 5.51351C16.8087 5.51351 19.5029 8.22943 19.5029 11.577C19.5029 12.6254 19.2397 13.6108 18.7761 14.4698L17.1637 13.1981C17.5146 12.3854 17.6065 11.4549 17.3642 10.5327C16.9006 8.78525 15.3676 7.61046 13.6633 7.53887C13.4211 7.53045 13.279 7.79573 13.3542 8.03153C13.442 8.30102 13.4921 8.58735 13.4921 8.88631C13.4921 9.3158 13.3918 9.72004 13.2164 10.0779L9.44451 7.09675L9.44034 7.09253ZM15.7017 17.2152C15.0167 17.4888 14.269 17.6404 13.4879 17.6404C10.1671 17.6404 7.47294 14.9245 7.47294 11.577C7.47294 11.2864 7.49383 11.0043 7.53142 10.7264L3.59246 7.59782C2.64009 8.84841 1.95923 10.0948 1.56241 11.0591C1.42457 11.3917 1.42457 11.7622 1.56241 12.0949C2.18479 13.5981 3.49221 15.7877 5.44707 17.6152C7.41029 19.4595 10.1128 21.009 13.4879 21.009C15.4845 21.009 17.2431 20.4658 18.7593 19.6405L15.7017 17.2152Z"
                    fill="black"
                  />
                </EyeSvg>
              )}
            </InputWrapper>

            <ExplainTxt>AWS IAM Secret Key</ExplainTxt>
            <InputWrapper>
              <ImpInput
                type={awsSecretCanSee}
                onChange={onChangeAWSSecretKey}
                value={awsSecretKey || ""}
                readOnly={awsSecretReady}
              ></ImpInput>
              <PencilSvg
                width="20"
                height="20"
                viewBox="0 0 23 23"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                onClick={() => {
                  setAwsSecretReady((prev) => !prev);
                }}
              >
                <path
                  d="M17.7646 10.5244L18.2404 10.0486L16.813 8.62119L14.1981 6.00632L12.7706 4.57888L12.2948 5.0547L11.3432 6.00632L2.9554 14.3941C2.51749 14.832 2.19747 15.3752 2.02062 15.9689L0.530017 21.0387C0.424748 21.3924 0.521595 21.7755 0.786872 22.0366C1.05215 22.2977 1.43112 22.3945 1.78482 22.2935L6.85034 20.8029C7.44405 20.626 7.98724 20.306 8.42515 19.8681L16.813 11.4803L17.7646 10.5244ZM7.22509 17.6153L6.84192 18.5712C6.67349 18.7017 6.484 18.7985 6.28189 18.8617L2.98909 19.8302L3.95756 16.5416C4.01651 16.3353 4.11757 16.1458 4.2481 15.9816L5.20394 15.5984V16.9458C5.20394 17.3164 5.50711 17.6195 5.87766 17.6195H7.22509V17.6153ZM15.7603 1.58505L15.1539 2.1956L14.2023 3.14723L13.7223 3.62304L15.1497 5.05048L17.7646 7.66535L19.192 9.09279L19.6678 8.61698L20.6195 7.66535L21.23 7.0548C22.2827 6.00211 22.2827 4.29676 21.23 3.24408L19.5752 1.58505C18.5225 0.532361 16.8172 0.532361 15.7645 1.58505H15.7603ZM13.7644 8.65909L7.70091 14.7226C7.43984 14.9836 7.01035 14.9836 6.74928 14.7226C6.48821 14.4615 6.48821 14.032 6.74928 13.7709L12.8127 7.70746C13.0738 7.4464 13.5033 7.4464 13.7644 7.70746C14.0254 7.96853 14.0254 8.39802 13.7644 8.65909Z"
                  fill="black"
                />
              </PencilSvg>
              {awsSecretCanSee === "text" ? (
                <EyeSvg
                  width="25"
                  height="23"
                  viewBox="0 0 25 23"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  onClick={() => {
                    setAwsSecretCanSee((prev) =>
                      prev === "password" ? "text" : "password"
                    );
                  }}
                >
                  <path
                    d="M12.4999 1.4375C8.99295 1.4375 6.18479 3.09062 4.14052 5.0582C2.10927 7.00781 0.75076 9.34375 0.108398 10.9475C-0.0348307 11.3023 -0.0348307 11.6977 0.108398 12.0525C0.75076 13.6562 2.10927 15.9922 4.14052 17.9418C6.18479 19.9094 8.99295 21.5625 12.4999 21.5625C16.0068 21.5625 18.815 19.9094 20.8593 17.9418C22.8905 15.9877 24.249 13.6562 24.8957 12.0525C25.039 11.6977 25.039 11.3023 24.8957 10.9475C24.249 9.34375 22.8905 7.00781 20.8593 5.0582C18.815 3.09062 16.0068 1.4375 12.4999 1.4375ZM6.24989 11.5C6.24989 9.78438 6.90837 8.13903 8.08047 6.9259C9.25258 5.71278 10.8423 5.03125 12.4999 5.03125C14.1575 5.03125 15.7472 5.71278 16.9193 6.9259C18.0914 8.13903 18.7499 9.78438 18.7499 11.5C18.7499 13.2156 18.0914 14.861 16.9193 16.0741C15.7472 17.2872 14.1575 17.9688 12.4999 17.9688C10.8423 17.9688 9.25258 17.2872 8.08047 16.0741C6.90837 14.861 6.24989 13.2156 6.24989 11.5ZM12.4999 8.625C12.4999 10.2107 11.2542 11.5 9.72211 11.5C9.41395 11.5 9.11882 11.4461 8.84104 11.3518C8.60232 11.2709 8.32454 11.4236 8.33323 11.6842C8.34625 11.9941 8.38965 12.3041 8.47211 12.6141C9.06673 14.9141 11.3541 16.2797 13.5763 15.6643C15.7985 15.0488 17.1179 12.6814 16.5233 10.3814C16.0416 8.51719 14.4487 7.26387 12.6778 7.1875C12.4261 7.17852 12.2785 7.46152 12.3567 7.71309C12.4478 8.00059 12.4999 8.30605 12.4999 8.625Z"
                    fill="black"
                  />
                </EyeSvg>
              ) : (
                <EyeSvg
                  width="26"
                  height="22"
                  viewBox="0 0 27 23"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  onClick={() => {
                    setAwsSecretCanSee((prev) =>
                      prev === "password" ? "text" : "password"
                    );
                  }}
                >
                  <path
                    d="M1.74203 1.01223C1.30761 0.666945 0.676877 0.746949 0.334358 1.18487C-0.00816014 1.62278 0.0712039 2.2586 0.505618 2.60389L25.2338 22.1417C25.6682 22.487 26.2989 22.407 26.6414 21.9691C26.984 21.5312 26.9046 20.8953 26.4702 20.5501L22.0759 17.0804C23.73 15.3708 24.8495 13.455 25.4134 12.0949C25.5512 11.7622 25.5512 11.3917 25.4134 11.0591C24.791 9.55582 23.4836 7.36623 21.5287 5.53877C19.5655 3.69447 16.863 2.14491 13.4879 2.14491C10.6392 2.14491 8.26658 3.25234 6.41615 4.70504L1.74203 1.01223ZM9.44034 7.09253C10.5055 6.11143 11.9299 5.51351 13.4879 5.51351C16.8087 5.51351 19.5029 8.22943 19.5029 11.577C19.5029 12.6254 19.2397 13.6108 18.7761 14.4698L17.1637 13.1981C17.5146 12.3854 17.6065 11.4549 17.3642 10.5327C16.9006 8.78525 15.3676 7.61046 13.6633 7.53887C13.4211 7.53045 13.279 7.79573 13.3542 8.03153C13.442 8.30102 13.4921 8.58735 13.4921 8.88631C13.4921 9.3158 13.3918 9.72004 13.2164 10.0779L9.44451 7.09675L9.44034 7.09253ZM15.7017 17.2152C15.0167 17.4888 14.269 17.6404 13.4879 17.6404C10.1671 17.6404 7.47294 14.9245 7.47294 11.577C7.47294 11.2864 7.49383 11.0043 7.53142 10.7264L3.59246 7.59782C2.64009 8.84841 1.95923 10.0948 1.56241 11.0591C1.42457 11.3917 1.42457 11.7622 1.56241 12.0949C2.18479 13.5981 3.49221 15.7877 5.44707 17.6152C7.41029 19.4595 10.1128 21.009 13.4879 21.009C15.4845 21.009 17.2431 20.4658 18.7593 19.6405L15.7017 17.2152Z"
                    fill="black"
                  />
                </EyeSvg>
              )}
            </InputWrapper>
          </AWS>
          <GitHubDocker>
            <ExplainTxt>Docker Hub Token</ExplainTxt>
            <InputWrapper>
              <ImpInput
                type={dockerCanSee}
                onChange={onChangeDockerHubToken}
                value={dockerHubToken}
                readOnly={dockerReady}
              ></ImpInput>
              <PencilSvg
                width="20"
                height="20"
                viewBox="0 0 23 23"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                onClick={() => {
                  setDockerReady((prev) => !prev);
                }}
              >
                <path
                  d="M17.7646 10.5244L18.2404 10.0486L16.813 8.62119L14.1981 6.00632L12.7706 4.57888L12.2948 5.0547L11.3432 6.00632L2.9554 14.3941C2.51749 14.832 2.19747 15.3752 2.02062 15.9689L0.530017 21.0387C0.424748 21.3924 0.521595 21.7755 0.786872 22.0366C1.05215 22.2977 1.43112 22.3945 1.78482 22.2935L6.85034 20.8029C7.44405 20.626 7.98724 20.306 8.42515 19.8681L16.813 11.4803L17.7646 10.5244ZM7.22509 17.6153L6.84192 18.5712C6.67349 18.7017 6.484 18.7985 6.28189 18.8617L2.98909 19.8302L3.95756 16.5416C4.01651 16.3353 4.11757 16.1458 4.2481 15.9816L5.20394 15.5984V16.9458C5.20394 17.3164 5.50711 17.6195 5.87766 17.6195H7.22509V17.6153ZM15.7603 1.58505L15.1539 2.1956L14.2023 3.14723L13.7223 3.62304L15.1497 5.05048L17.7646 7.66535L19.192 9.09279L19.6678 8.61698L20.6195 7.66535L21.23 7.0548C22.2827 6.00211 22.2827 4.29676 21.23 3.24408L19.5752 1.58505C18.5225 0.532361 16.8172 0.532361 15.7645 1.58505H15.7603ZM13.7644 8.65909L7.70091 14.7226C7.43984 14.9836 7.01035 14.9836 6.74928 14.7226C6.48821 14.4615 6.48821 14.032 6.74928 13.7709L12.8127 7.70746C13.0738 7.4464 13.5033 7.4464 13.7644 7.70746C14.0254 7.96853 14.0254 8.39802 13.7644 8.65909Z"
                  fill="black"
                />
              </PencilSvg>
              {dockerCanSee === "text" ? (
                <EyeSvg
                  width="25"
                  height="23"
                  viewBox="0 0 25 23"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  onClick={() => {
                    setDockerCanSee((prev) =>
                      prev === "password" ? "text" : "password"
                    );
                  }}
                >
                  <path
                    d="M12.4999 1.4375C8.99295 1.4375 6.18479 3.09062 4.14052 5.0582C2.10927 7.00781 0.75076 9.34375 0.108398 10.9475C-0.0348307 11.3023 -0.0348307 11.6977 0.108398 12.0525C0.75076 13.6562 2.10927 15.9922 4.14052 17.9418C6.18479 19.9094 8.99295 21.5625 12.4999 21.5625C16.0068 21.5625 18.815 19.9094 20.8593 17.9418C22.8905 15.9877 24.249 13.6562 24.8957 12.0525C25.039 11.6977 25.039 11.3023 24.8957 10.9475C24.249 9.34375 22.8905 7.00781 20.8593 5.0582C18.815 3.09062 16.0068 1.4375 12.4999 1.4375ZM6.24989 11.5C6.24989 9.78438 6.90837 8.13903 8.08047 6.9259C9.25258 5.71278 10.8423 5.03125 12.4999 5.03125C14.1575 5.03125 15.7472 5.71278 16.9193 6.9259C18.0914 8.13903 18.7499 9.78438 18.7499 11.5C18.7499 13.2156 18.0914 14.861 16.9193 16.0741C15.7472 17.2872 14.1575 17.9688 12.4999 17.9688C10.8423 17.9688 9.25258 17.2872 8.08047 16.0741C6.90837 14.861 6.24989 13.2156 6.24989 11.5ZM12.4999 8.625C12.4999 10.2107 11.2542 11.5 9.72211 11.5C9.41395 11.5 9.11882 11.4461 8.84104 11.3518C8.60232 11.2709 8.32454 11.4236 8.33323 11.6842C8.34625 11.9941 8.38965 12.3041 8.47211 12.6141C9.06673 14.9141 11.3541 16.2797 13.5763 15.6643C15.7985 15.0488 17.1179 12.6814 16.5233 10.3814C16.0416 8.51719 14.4487 7.26387 12.6778 7.1875C12.4261 7.17852 12.2785 7.46152 12.3567 7.71309C12.4478 8.00059 12.4999 8.30605 12.4999 8.625Z"
                    fill="black"
                  />
                </EyeSvg>
              ) : (
                <EyeSvg
                  width="26"
                  height="22"
                  viewBox="0 0 27 23"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  onClick={() => {
                    setDockerCanSee((prev) =>
                      prev === "password" ? "text" : "password"
                    );
                  }}
                >
                  <path
                    d="M1.74203 1.01223C1.30761 0.666945 0.676877 0.746949 0.334358 1.18487C-0.00816014 1.62278 0.0712039 2.2586 0.505618 2.60389L25.2338 22.1417C25.6682 22.487 26.2989 22.407 26.6414 21.9691C26.984 21.5312 26.9046 20.8953 26.4702 20.5501L22.0759 17.0804C23.73 15.3708 24.8495 13.455 25.4134 12.0949C25.5512 11.7622 25.5512 11.3917 25.4134 11.0591C24.791 9.55582 23.4836 7.36623 21.5287 5.53877C19.5655 3.69447 16.863 2.14491 13.4879 2.14491C10.6392 2.14491 8.26658 3.25234 6.41615 4.70504L1.74203 1.01223ZM9.44034 7.09253C10.5055 6.11143 11.9299 5.51351 13.4879 5.51351C16.8087 5.51351 19.5029 8.22943 19.5029 11.577C19.5029 12.6254 19.2397 13.6108 18.7761 14.4698L17.1637 13.1981C17.5146 12.3854 17.6065 11.4549 17.3642 10.5327C16.9006 8.78525 15.3676 7.61046 13.6633 7.53887C13.4211 7.53045 13.279 7.79573 13.3542 8.03153C13.442 8.30102 13.4921 8.58735 13.4921 8.88631C13.4921 9.3158 13.3918 9.72004 13.2164 10.0779L9.44451 7.09675L9.44034 7.09253ZM15.7017 17.2152C15.0167 17.4888 14.269 17.6404 13.4879 17.6404C10.1671 17.6404 7.47294 14.9245 7.47294 11.577C7.47294 11.2864 7.49383 11.0043 7.53142 10.7264L3.59246 7.59782C2.64009 8.84841 1.95923 10.0948 1.56241 11.0591C1.42457 11.3917 1.42457 11.7622 1.56241 12.0949C2.18479 13.5981 3.49221 15.7877 5.44707 17.6152C7.41029 19.4595 10.1128 21.009 13.4879 21.009C15.4845 21.009 17.2431 20.4658 18.7593 19.6405L15.7017 17.2152Z"
                    fill="black"
                  />
                </EyeSvg>
              )}
            </InputWrapper>
          </GitHubDocker>
          <ButtonWrapper>
            <Button onClick={onclickUserDelete}>회원탈퇴</Button>
            <Button>저장</Button>
          </ButtonWrapper>
        </UserInfoWrapper>
      </Wrapper>
      <Footer />
    </>
  );
}

export default MyPage;
